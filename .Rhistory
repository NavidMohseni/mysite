)
library(dplyr)
census1 <- filter(census, gender==1 & age==0)
census1 <- mutate(census1,
rate_total=unemp_total*100/(emp_total+unemp_total),
rate_university=unemp_university*100/(emp_university+unemp_university),
part=(emp_total+unemp_total)/pop*100
)
shapefile_df_census <- inner_join(shapefile_df,census1)
map3 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = rate_total),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ بیکاری مردان",
low="white",high="blue" ,
limits=c(0, 50),  na.value = "red")+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map3)
ggsave("rate_m.png", width = 5, height = 5)
map4 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = rate_total),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ مشارکت مردان",
low="white",high="blue" ,
)+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map4)
ggsave("part_m.png", width = 5, height = 5)
map4 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = part),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ مشارکت مردان",
low="white",high="blue" ,
)+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map4)
ggsave("part_m.png", width = 5, height = 5)
library(rgdal)     # R wrapper around GDAL/OGR
library(ggplot2)   # for general plotting
library(ggmaps)    # for fortifying shapefiles
library(xlsx)
# First read in the shapefile, using the path to the shapefile and the shapefile name minus the
# extension as arguments
shapefile <- readOGR(dsn="C:\\Users\\Mohammad\\Downloads\\Iran Counties", layer="Shahrestan")
citypoint <- read.xlsx2("C:\\Users\\Mohammad\\Dropbox (IMPS)\\Employment\\census95\\citycoordinates.xlsx",2)
# Next the shapefile has to be converted to a dataframe for use in ggplot2
shapefile_df <- fortify(shapefile)
# Now the shapefile can be plotted as either a geom_path or a geom_polygon.
# Paths handle clipping better. Polygons can be filled.
# You need the aesthetics long, lat, and group.
library(foreign)
census <- read.dta("C:\\Users\\Mohammad\\Dropbox (IMPS)\\Employment\\census95\\censusemp.dta",convert.factors = FALSE)
sapply(census,class)
census <- transform(census, id = as.character(id))
citypoint <- transform(citypoint,y=as.character(y),
x=as.character(x),
casalities=as.character(casalities),
Dey7=as.character(Dey7),
Dey8=as.character(Dey8),
Dey9=as.character(Dey9),
Dey10=as.character(Dey10),
Dey11=as.character(Dey11),
Dey12=as.character(Dey12),
Dey13=as.character(Dey13)
)
citypoint <- transform(citypoint,x=as.numeric(x),y=as.numeric(y),
casalities=as.numeric(casalities),
Dey7=as.numeric(Dey7),
Dey8=as.numeric(Dey8),
Dey9=as.numeric(Dey9),
Dey10=as.numeric(Dey10),
Dey11=as.numeric(Dey11),
Dey12=as.numeric(Dey12),
Dey13=as.numeric(Dey13)
)
library(dplyr)
census1 <- filter(census, gender==1 & age==0)
census1 <- mutate(census1,
rate_total=unemp_total*100/(emp_total+unemp_total),
rate_university=unemp_university*100/(emp_university+unemp_university),
part=(emp_total+unemp_total)/pop*100
)
shapefile_df_census <- inner_join(shapefile_df,census1)
map3 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = rate_total),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ بیکاری مردان",
low="white",high="red" ,
limits=c(0, 50),  na.value = "red")+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map3)
ggsave("rate_m.png", width = 5, height = 5)
map4 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = part),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ مشارکت مردان",
low="white",high="blue" )+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map4)
ggsave("part_m.png", width = 5, height = 5)
library(rgdal)     # R wrapper around GDAL/OGR
library(ggplot2)   # for general plotting
library(ggmaps)    # for fortifying shapefiles
library(xlsx)
# First read in the shapefile, using the path to the shapefile and the shapefile name minus the
# extension as arguments
shapefile <- readOGR(dsn="C:\\Users\\Mohammad\\Downloads\\Iran Counties", layer="Shahrestan")
citypoint <- read.xlsx2("C:\\Users\\Mohammad\\Dropbox (IMPS)\\Employment\\census95\\citycoordinates.xlsx",2)
# Next the shapefile has to be converted to a dataframe for use in ggplot2
shapefile_df <- fortify(shapefile)
# Now the shapefile can be plotted as either a geom_path or a geom_polygon.
# Paths handle clipping better. Polygons can be filled.
# You need the aesthetics long, lat, and group.
library(foreign)
census <- read.dta("C:\\Users\\Mohammad\\Dropbox (IMPS)\\Employment\\census95\\censusemp.dta",convert.factors = FALSE)
sapply(census,class)
census <- transform(census, id = as.character(id))
citypoint <- transform(citypoint,y=as.character(y),
x=as.character(x),
casalities=as.character(casalities),
Dey7=as.character(Dey7),
Dey8=as.character(Dey8),
Dey9=as.character(Dey9),
Dey10=as.character(Dey10),
Dey11=as.character(Dey11),
Dey12=as.character(Dey12),
Dey13=as.character(Dey13)
)
citypoint <- transform(citypoint,x=as.numeric(x),y=as.numeric(y),
casalities=as.numeric(casalities),
Dey7=as.numeric(Dey7),
Dey8=as.numeric(Dey8),
Dey9=as.numeric(Dey9),
Dey10=as.numeric(Dey10),
Dey11=as.numeric(Dey11),
Dey12=as.numeric(Dey12),
Dey13=as.numeric(Dey13)
)
library(dplyr)
census1 <- filter(census, gender==2 & age==0)
census1 <- mutate(census1,
rate_total=unemp_total*100/(emp_total+unemp_total),
rate_university=unemp_university*100/(emp_university+unemp_university),
part=(emp_total+unemp_total)/pop*100
)
shapefile_df_census <- inner_join(shapefile_df,census1)
map3 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = rate_total),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ بیکاری زنان",
low="white",high="red" ,
limits=c(0, 50),  na.value = "red")+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map3)
ggsave("rate_f.png", width = 5, height = 5)
map4 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = part),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ مشارکت زنان",
low="white",high="blue" )+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map4)
ggsave("part_f.png", width = 5, height = 5)
library(rgdal)     # R wrapper around GDAL/OGR
library(ggplot2)   # for general plotting
library(ggmaps)    # for fortifying shapefiles
library(xlsx)
# First read in the shapefile, using the path to the shapefile and the shapefile name minus the
# extension as arguments
shapefile <- readOGR(dsn="C:\\Users\\Mohammad\\Downloads\\Iran Counties", layer="Shahrestan")
citypoint <- read.xlsx2("C:\\Users\\Mohammad\\Dropbox (IMPS)\\Employment\\census95\\citycoordinates.xlsx",2)
# Next the shapefile has to be converted to a dataframe for use in ggplot2
shapefile_df <- fortify(shapefile)
# Now the shapefile can be plotted as either a geom_path or a geom_polygon.
# Paths handle clipping better. Polygons can be filled.
# You need the aesthetics long, lat, and group.
library(foreign)
census <- read.dta("C:\\Users\\Mohammad\\Dropbox (IMPS)\\Employment\\census95\\censusemp.dta",convert.factors = FALSE)
sapply(census,class)
census <- transform(census, id = as.character(id))
citypoint <- transform(citypoint,y=as.character(y),
x=as.character(x),
casalities=as.character(casalities),
Dey7=as.character(Dey7),
Dey8=as.character(Dey8),
Dey9=as.character(Dey9),
Dey10=as.character(Dey10),
Dey11=as.character(Dey11),
Dey12=as.character(Dey12),
Dey13=as.character(Dey13)
)
citypoint <- transform(citypoint,x=as.numeric(x),y=as.numeric(y),
casalities=as.numeric(casalities),
Dey7=as.numeric(Dey7),
Dey8=as.numeric(Dey8),
Dey9=as.numeric(Dey9),
Dey10=as.numeric(Dey10),
Dey11=as.numeric(Dey11),
Dey12=as.numeric(Dey12),
Dey13=as.numeric(Dey13)
)
library(dplyr)
census1 <- filter(census, gender==2 & age==0)
census1 <- mutate(census1,
rate_total=unemp_total*100/(emp_total+unemp_total),
rate_university=unemp_university*100/(emp_university+unemp_university),
part=(emp_total+unemp_total)/pop*100
)
shapefile_df_census <- inner_join(shapefile_df,census1)
map3 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = rate_total),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ بیکاری زنان",
low="white",high="red" ,
limits=c(0, 50),  na.value = "red")+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map3)
ggsave("rate_f.png", width = 7, height = 5)
map4 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = part),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ مشارکت زنان",
low="white",high="blue" )+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map4)
ggsave("part_f.png", width = 7, height = 5)
map4 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = part),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ مشارکت زنان",
low="white",high="blue" )+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map4)
ggsave("part_f.png", width = 6, height = 5)
library(rgdal)     # R wrapper around GDAL/OGR
library(ggplot2)   # for general plotting
library(ggmaps)    # for fortifying shapefiles
library(xlsx)
library(extrafont)
loadfonts(device = "win")
# First read in the shapefile, using the path to the shapefile and the shapefile name minus the
# extension as arguments
shapefile <- readOGR(dsn="C:\\Users\\Mohammad\\Downloads\\Iran Counties", layer="Shahrestan")
citypoint <- read.xlsx2("C:\\Users\\Mohammad\\Dropbox (IMPS)\\Employment\\census95\\citycoordinates.xlsx",2)
# Next the shapefile has to be converted to a dataframe for use in ggplot2
shapefile_df <- fortify(shapefile)
# Now the shapefile can be plotted as either a geom_path or a geom_polygon.
# Paths handle clipping better. Polygons can be filled.
# You need the aesthetics long, lat, and group.
library(foreign)
census <- read.dta("C:\\Users\\Mohammad\\Dropbox (IMPS)\\Employment\\census95\\censusemp.dta",convert.factors = FALSE)
sapply(census,class)
census <- transform(census, id = as.character(id))
citypoint <- transform(citypoint,y=as.character(y),
x=as.character(x),
casalities=as.character(casalities),
Dey7=as.character(Dey7),
Dey8=as.character(Dey8),
Dey9=as.character(Dey9),
Dey10=as.character(Dey10),
Dey11=as.character(Dey11),
Dey12=as.character(Dey12),
Dey13=as.character(Dey13)
)
citypoint <- transform(citypoint,x=as.numeric(x),y=as.numeric(y),
casalities=as.numeric(casalities),
Dey7=as.numeric(Dey7),
Dey8=as.numeric(Dey8),
Dey9=as.numeric(Dey9),
Dey10=as.numeric(Dey10),
Dey11=as.numeric(Dey11),
Dey12=as.numeric(Dey12),
Dey13=as.numeric(Dey13)
)
library(dplyr)
census1 <- filter(census, gender==2 & age==0)
census1 <- mutate(census1,
rate_total=unemp_total*100/(emp_total+unemp_total),
rate_university=unemp_university*100/(emp_university+unemp_university),
part=(emp_total+unemp_total)/pop*100
)
shapefile_df_census <- inner_join(shapefile_df,census1)
map3 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = rate_total),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ بیکاری زنان",
low="white",high="red" ,
limits=c(0, 50),  na.value = "red")+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map3)
ggsave("rate_f.png", width = 6, height = 5)
map4 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = part),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ مشارکت زنان",
low="white",high="blue" )+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map4)
ggsave("part_f.png", width = 6, height = 5)
library(rgdal)     # R wrapper around GDAL/OGR
library(ggplot2)   # for general plotting
library(ggmaps)    # for fortifying shapefiles
library(xlsx)
library(extrafont)
loadfonts(device = "win")
# First read in the shapefile, using the path to the shapefile and the shapefile name minus the
# extension as arguments
shapefile <- readOGR(dsn="C:\\Users\\Mohammad\\Downloads\\Iran Counties", layer="Shahrestan")
citypoint <- read.xlsx2("C:\\Users\\Mohammad\\Dropbox (IMPS)\\Employment\\census95\\citycoordinates.xlsx",2)
# Next the shapefile has to be converted to a dataframe for use in ggplot2
shapefile_df <- fortify(shapefile)
# Now the shapefile can be plotted as either a geom_path or a geom_polygon.
# Paths handle clipping better. Polygons can be filled.
# You need the aesthetics long, lat, and group.
library(foreign)
census <- read.dta("C:\\Users\\Mohammad\\Dropbox (IMPS)\\Employment\\census95\\censusemp.dta",convert.factors = FALSE)
sapply(census,class)
census <- transform(census, id = as.character(id))
citypoint <- transform(citypoint,y=as.character(y),
x=as.character(x),
casalities=as.character(casalities),
Dey7=as.character(Dey7),
Dey8=as.character(Dey8),
Dey9=as.character(Dey9),
Dey10=as.character(Dey10),
Dey11=as.character(Dey11),
Dey12=as.character(Dey12),
Dey13=as.character(Dey13)
)
citypoint <- transform(citypoint,x=as.numeric(x),y=as.numeric(y),
casalities=as.numeric(casalities),
Dey7=as.numeric(Dey7),
Dey8=as.numeric(Dey8),
Dey9=as.numeric(Dey9),
Dey10=as.numeric(Dey10),
Dey11=as.numeric(Dey11),
Dey12=as.numeric(Dey12),
Dey13=as.numeric(Dey13)
)
library(dplyr)
census1 <- filter(census, gender==1 & age==0)
census1 <- mutate(census1,
rate_total=unemp_total*100/(emp_total+unemp_total),
rate_university=unemp_university*100/(emp_university+unemp_university),
part=(emp_total+unemp_total)/pop*100
)
shapefile_df_census <- inner_join(shapefile_df,census1)
map3 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = rate_total),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ بیکاری مردان",
low="white",high="red" ,
limits=c(0, 50),  na.value = "red")+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map3)
ggsave("rate_m.png", width = 6, height = 5)
map4 <- ggplot() +
geom_polygon(data = shapefile_df_census,
aes(x = long, y = lat, group = group, fill = part),
color = 'white' , size = .1) +
scale_fill_gradient(name = "نرخ مشارکت مردان",
low="white",high="blue" )+
labs( x = " ", y = " ")+
theme(
text = element_text(family="B Mitra"),
title = element_text(family="B Mitra"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(map4)
ggsave("part_m.png", width = 6, height = 5)
?model.matrix
DT <- data.table(V1=c(1L,2L),
V2=LETTERS[1:3],
V3=round(rnorm(4),4),
V4=1:12)
library(data.table)
DT <- data.table(V1=c(1L,2L),
V2=LETTERS[1:3],
V3=round(rnorm(4),4),
V4=1:12)
?set.seed
x <- data.table(,mean(V3[V2=='A']),by=V1)
data.table(,mean(V3),by=V1)
data.table(,mean(V3))
x <- data.table[],mean(V3[V2=='A']),by=V1]
x <- data.table[,mean(V3[V2=='A']),by=V1]
DT[,mean(V3[V2=='A']),by=V1]
DT[,mean(V3[V1==1]),by=V2]
DT
DT[,min(V3[V1==1]),by=V2]
DT[,mean(V3[V2=='A']),by=V1]
DT
.89+.44
1.33/2
DT[,mean:=mean(V3[V2=='A']),by=V1]
B=DT[,mean1:=mean(V3[V2=='A']),by=V1]
B
print(B)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Mohammad/Documents/GitHub/mysite")
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
